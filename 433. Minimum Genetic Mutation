class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        unordered_set<string> bankset(bank.begin(),bank.end());

        unordered_set<string>visited;
        queue<string> que;

        que.push(start);
        visited.insert(start);

        int level=0;

        while(!que.empty()){
            int n=que.size();

            while(n--){
                string curr = que.front();
                que.pop();

                if(curr==end) return level;

                for(char ch : "ACGT"){
                    for(int i=0;i<curr.size();i++){
                        string nei = curr;
                        nei[i] = ch;

                        if(visited.find(nei) == visited.end() && bankset.find(nei)!=bankset.end()){
                            visited.insert(nei);
                            que.push(nei);
                        }
                    }
                }
            }
            level++;
        }
        return -1;
    }
};
